# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Build documentation
on:
  workflow_dispatch: # Allow running the workflow manually from the GitHub UI
  workflow_run:
    workflows:
      - tagged-release
    types:
      - completed
env:
  # Name of module and id separated by a slash
  INSTANCE: Writerside/u
  ARTIFACT: webHelpU2-all.zip
  # Writerside docker image version
  DOCKER_VERSION: 233.14272
  # Add the variable below to upload Algolia indexes
  ALGOLIA_ARTIFACT: algolia-indexes-U.zip

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Build Writerside docs using Docker
      uses: JetBrains/writerside-github-action@v5
      with:
        working-directory: ./docs
        instance: ${{ env.INSTANCE }}
        artifact: ${{ env.ARTIFACT }}
        docker-version: ${{ env.DOCKER_VERSION }}

    - name: Upload documentation
      uses: actions/upload-artifact@v4
      with:
        name: docs
        working-directory: ./docs
        path: |
          artifacts/${{ env.ARTIFACT }}
          artifacts/report.json
        retention-days: 7

    # Add the step below to upload Algolia indexes
    - name: Upload algolia-indexes
      uses: actions/upload-artifact@v4
      with:
        name: algolia-indexes
        path: artifacts/${{ env.ALGOLIA_ARTIFACT }}
        retention-days: 7

  # Add the job below and artifacts/report.json on Upload documentation step above if you want to fail the build when documentation contains errors
  test:
    # Requires build job results
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: docs
        path: artifacts

    - name: Test documentation
      uses: JetBrains/writerside-checker-action@v1
      with:
        instance: ${{ env.INSTANCE }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    # Requires the build job results
    needs: test
    runs-on: ubuntu-latest

    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: docs

    - name: Unzip artifact
      run: unzip -O UTF-8 -qq ${{ env.ARTIFACT }} -d dir

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: dir

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4